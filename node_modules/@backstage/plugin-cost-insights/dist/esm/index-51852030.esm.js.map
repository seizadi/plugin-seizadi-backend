{"version":3,"file":"index-51852030.esm.js","sources":["../../src/components/LabelDataflowInstructionsPage/LabelDataflowInstructionsPage.tsx"],"sourcesContent":["/*\n * Copyright 2020 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React from 'react';\nimport { Box, Typography } from '@material-ui/core';\nimport { AlertInstructionsLayout } from '../AlertInstructionsLayout';\nimport { CodeSnippet, Link } from '@backstage/core-components';\n\nexport const LabelDataflowInstructionsPage = () => {\n  return (\n    <AlertInstructionsLayout title=\"Investigating Growth\">\n      <Typography variant=\"h1\">Labeling Dataflow Jobs</Typography>\n      <Typography paragraph>\n        Labels in Google Cloud Platform are key-value pairs that can be added to\n        most types of cloud resources. Since these labels are also exported in\n        billing data, adding labels allows a granular breakdown of cloud cost by\n        software entity.\n      </Typography>\n      <Typography paragraph>\n        In Cloud Dataflow, labels can be added to a job either programmatically\n        or via the command-line when launching a job. Note that GCP has{' '}\n        <Link to=\"https://cloud.google.com/compute/docs/labeling-resources#restrictions\">\n          restrictions\n        </Link>{' '}\n        on the length and characters that can be used in labels.\n      </Typography>\n      <Typography paragraph>\n        Labels are not retroactive, so cost tracking is only possible from when\n        the labels are first added to a Dataflow job.\n      </Typography>\n\n      <Box mt={4}>\n        <Typography variant=\"h3\">DataflowPipelineOptions</Typography>\n        <Typography paragraph>\n          Dataflow jobs using Beam's{' '}\n          <Link to=\"https://beam.apache.org/releases/javadoc/2.3.0/org/apache/beam/runners/dataflow/options/DataflowPipelineOptions.html\">\n            DataflowPipelineOptions\n          </Link>{' '}\n          directly can use the <b>setLabels</b> function to add one or more\n          labels:\n          <CodeSnippet\n            language=\"java\"\n            text={`private DataflowPipelineOptions options = PipelineOptionsFactory.fromArgs(args).as(DataflowPipelineOptionsImpl.class); \noptions.setLabels(ImmutableMap.of(\"job-id\", \"my-dataflow-job\"));`}\n          />\n        </Typography>\n        <Typography paragraph>\n          Dataflow jobs using Scio can similarly set options on the ScioContext:\n          <CodeSnippet\n            language=\"scala\"\n            text={`val (sc: ScioContext, args: Args) = ContextAndArgs(cmdLineArgs)\nsc.optionsAs[DataflowPipelineOptions].setLabels(Map(\"job-id\" -> \"my-dataflow-job\").asJava)`}\n          />\n        </Typography>\n      </Box>\n\n      <Box mt={4}>\n        <Typography variant=\"h3\">Command-line</Typography>\n        <Typography paragraph>\n          Dataflow jobs launched from the command-line can add labels as an\n          argument:\n          <CodeSnippet\n            language=\"shell\"\n            text={`--labels={\"job-id\": \"my-dataflow-job\", \"date-argument\": \"2020-09-16\"}`}\n          />\n        </Typography>\n        <Typography paragraph>\n          For more information on specifying options, see the{' '}\n          <Link to=\"https://cloud.google.com/dataflow/docs/guides/specifying-exec-params\">\n            Dataflow documentation\n          </Link>{' '}\n          or{' '}\n          <Link to=\"https://spotify.github.io/scio/api/com/spotify/scio/ScioContext.html\">\n            Scio Scaladoc\n          </Link>\n          .\n        </Typography>\n      </Box>\n    </AlertInstructionsLayout>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAqBa,gCAAgC,MAAM;AACjD,6CACG,yBAAD;AAAA,IAAyB,OAAM;AAAA,yCAC5B,YAAD;AAAA,IAAY,SAAQ;AAAA,KAAK,+DACxB,YAAD;AAAA,IAAY,WAAS;AAAA,KAAC,kRAMrB,YAAD;AAAA,IAAY,WAAS;AAAA,KAAC,2IAE4C,yCAC/D,MAAD;AAAA,IAAM,IAAG;AAAA,KAAwE,iBAEzE,KAAI,iGAGb,YAAD;AAAA,IAAY,WAAS;AAAA,KAAC,8JAKrB,KAAD;AAAA,IAAK,IAAI;AAAA,yCACN,YAAD;AAAA,IAAY,SAAQ;AAAA,KAAK,gEACxB,YAAD;AAAA,IAAY,WAAS;AAAA,KAAC,8BACO,yCAC1B,MAAD;AAAA,IAAM,IAAG;AAAA,KAAuH,4BAExH,KAAI,6DACU,KAAD,MAAG,cAAa,4EAEpC,aAAD;AAAA,IACE,UAAS;AAAA,IACT,MAAM;AAAA;AAAA,2CAIT,YAAD;AAAA,IAAY,WAAS;AAAA,KAAC,8GAEnB,aAAD;AAAA,IACE,UAAS;AAAA,IACT,MAAM;AAAA;AAAA,4CAMX,KAAD;AAAA,IAAK,IAAI;AAAA,yCACN,YAAD;AAAA,IAAY,SAAQ;AAAA,KAAK,qDACxB,YAAD;AAAA,IAAY,WAAS;AAAA,KAAC,mHAGnB,aAAD;AAAA,IACE,UAAS;AAAA,IACT,MAAM;AAAA,2CAGT,YAAD;AAAA,IAAY,WAAS;AAAA,KAAC,uDACgC,yCACnD,MAAD;AAAA,IAAM,IAAG;AAAA,KAAuE,2BAExE,KAAI,MACT,yCACF,MAAD;AAAA,IAAM,IAAG;AAAA,KAAuE,kBAEzE;AAAA;;;;"}